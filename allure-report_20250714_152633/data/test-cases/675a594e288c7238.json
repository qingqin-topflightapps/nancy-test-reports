{"uid":"675a594e288c7238","name":"test_12_4_0_delete_edit_own_and_others_post","fullName":"tests.test_12_CMS_Communities#test_12_4_0_delete_edit_own_and_others_post","historyId":"a192d06d7a251b8666d67cc52e8aa4f4","time":{"start":1752474786989,"stop":1752474815524,"duration":28535},"description":"\nTest that an admin can delete and edit own posts, replies and posts/replies created by others.\n\nTest Steps:\n1. Launch the browser\n2. Login as admin user\n3. Navigate to Postpartum community page\n4. Create a new post with image\n5. Publish the post and verify creation\n6. Edit the post with new content\n7. Add a comment to the post\n8. Delete the comment\n9. Delete the post\n","descriptionHtml":"<p>Test that an admin can delete and edit own posts, replies and posts/replies created by others.</p>\n<p>Test Steps:</p>\n<ol>\n<li>Launch the browser</li>\n<li>Login as admin user</li>\n<li>Navigate to Postpartum community page</li>\n<li>Create a new post with image</li>\n<li>Publish the post and verify creation</li>\n<li>Edit the post with new content</li>\n<li>Add a comment to the post</li>\n<li>Delete the comment</li>\n<li>Delete the post</li>\n</ol>\n","status":"broken","statusMessage":"playwright._impl._errors.Error: LocatorAssertions.to_be_visible: Error: strict mode violation: get_by_text(\"This is a comment\") resolved to 2 elements:\n    1) <span>This is a comment</span> aka locator(\"span\").filter(has_text=\"This is a comment\")\n    2) <textarea placeholder=\"Add a comment...\">This is a comment</textarea> aka get_by_role(\"textbox\", name=\"Add a comment...\")\n\nCall log:\n  - Expect \"to_be_visible\" with timeout 5000ms\n  - waiting for get_by_text(\"This is a comment\")","statusTrace":"@allure.feature(\"12.0.0 CMS Communities\")\n    @allure.epic(\"Web CMS Testing\")\n    @allure.story(\"12.4.0 Delete/Edit Posts and Comments\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"\"\"\n    Test that an admin can delete and edit own posts, replies and posts/replies created by others.\n    \n    Test Steps:\n    1. Launch the browser\n    2. Login as admin user\n    3. Navigate to Postpartum community page\n    4. Create a new post with image\n    5. Publish the post and verify creation\n    6. Edit the post with new content\n    7. Add a comment to the post\n    8. Delete the comment\n    9. Delete the post\n    \"\"\")\n    def test_12_4_0_delete_edit_own_and_others_post():\n        with sync_playwright() as p:\n            # Launch browser with larger viewport\n            browser = p.chromium.launch(headless=False)\n            page = browser.new_page(viewport={'width': 1920, 'height': 1080})\n    \n            # Login using the existing login class\n            login_page = LoginPage(page)\n            login_page.loginDev(admin_user, admin_pw)\n    \n            # Navigate to the Postpartum community page\n            community_page = CommunityPage(page)\n            community_page.go_to_postpartum_community()\n    \n            # Create a new post to test edit and delete\n            image_path = \"uploads/images.jpeg\"\n            post_text = community_page.create_new_post(image_path)\n    \n            # Publish the post\n            community_page.publish_post()\n    \n            # Verify post creation\n            community_page.verify_post_created(post_text)\n    \n            # Edit the post\n            new_text = \"Updated post content\"\n            community_page.edit_post(new_text)\n    \n            # Add a comment to the post\n            comment = \"This is a comment\"\n>           community_page.comment_on_post(comment)  # Now passing only the comment\n\ntests/test_12_CMS_Communities.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/CommunityPage.py:109: in comment_on_post\n    expect(self.page.get_by_text(comment)).to_be_visible()\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/_impl/_locator.py:729: in _expect\n    result = await self._frame._channel.send_return_as_dict(\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/_impl/_connection.py:83: in send_return_as_dict\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x119899850>\ncb = <function Channel.send_return_as_dict.<locals>.<lambda> at 0x119873240>\nis_internal = False, title = 'Expect \"to_be_visible\"'\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.Error: LocatorAssertions.to_be_visible: Error: strict mode violation: get_by_text(\"This is a comment\") resolved to 2 elements:\nE               1) <span>This is a comment</span> aka locator(\"span\").filter(has_text=\"This is a comment\")\nE               2) <textarea placeholder=\"Add a comment...\">This is a comment</textarea> aka get_by_role(\"textbox\", name=\"Add a comment...\")\nE           \nE           Call log:\nE             - Expect \"to_be_visible\" with timeout 5000ms\nE             - waiting for get_by_text(\"This is a comment\")\n\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/_impl/_connection.py:558: Error","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1752474394498,"stop":1752474394499,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1752474394498,"stop":1752474394498,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1752474394498,"stop":1752474394498,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1752474394498,"stop":1752474394498,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"epic","value":"Web CMS Testing"},{"name":"feature","value":"12.0.0 CMS Communities"},{"name":"story","value":"12.4.0 Delete/Edit Posts and Comments"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_12_CMS_Communities"},{"name":"host","value":"fqqqqq.local"},{"name":"thread","value":"97610-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_12_CMS_Communities"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"38b534f2b42c0fd1","status":"broken","statusDetails":"playwright._impl._errors.Error: LocatorAssertions.to_be_visible: Error: strict mode violation: get_by_text(\"This is a comment\") resolved to 2 elements:\n    1) <span>This is a comment</span> aka locator(\"span\").filter(has_text=\"This is a comment\")\n    2) <textarea placeholder=\"Add a comment...\">This is a comment</textarea> aka get_by_role(\"textbox\", name=\"Add a comment...\")\n\nCall log:\n  - Expect \"to_be_visible\" with timeout 5000ms\n  - waiting for get_by_text(\"This is a comment\")","time":{"start":1752474757636,"stop":1752474785917,"duration":28281}},{"uid":"162bfac3fc2a9486","status":"broken","statusDetails":"playwright._impl._errors.Error: LocatorAssertions.to_be_visible: Error: strict mode violation: get_by_text(\"This is a comment\") resolved to 2 elements:\n    1) <span>This is a comment</span> aka locator(\"span\").filter(has_text=\"This is a comment\")\n    2) <textarea placeholder=\"Add a comment...\">This is a comment</textarea> aka get_by_role(\"textbox\", name=\"Add a comment...\")\n\nCall log:\n  - Expect \"to_be_visible\" with timeout 5000ms\n  - waiting for get_by_text(\"This is a comment\")","time":{"start":1752474726928,"stop":1752474756588,"duration":29660}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"675a594e288c7238.json","parameterValues":[]}