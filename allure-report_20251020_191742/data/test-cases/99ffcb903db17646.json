{"uid":"99ffcb903db17646","name":"test_NAF_16_2_0_verify_app_opens_to_comment_or_post_from_notifications","fullName":"tests.android.test_16_Notification.TestNotification#test_NAF_16_2_0_verify_app_opens_to_comment_or_post_from_notifications","historyId":"20430348860a56a461898fc9de5eff10","time":{"start":1760958923389,"stop":1760958923389,"duration":0},"description":"\n    Test Case: NAF-349\n    As a user, I want an in-app notifications page, so that I can view all my missed notifications in one place, even if I missed the initial push notification.\n    Scenario: Verify app opens to comment or post from notifications\n    \n    Steps:\n    1. Open the app, assume the user is logged in       \n    2. Go to \"Notifications\" tab\n    3. Verify app opens to comment or post from notifications\n    ","descriptionHtml":"<pre><code>Test Case: NAF-349\nAs a user, I want an in-app notifications page, so that I can view all my missed notifications in one place, even if I missed the initial push notification.\nScenario: Verify app opens to comment or post from notifications\n\nSteps:\n1. Open the app, assume the user is logged in       \n2. Go to &quot;Notifications&quot; tab\n3. Verify app opens to comment or post from notifications\n</code></pre>\n","status":"broken","statusMessage":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=4722): Max retries exceeded with url: /session (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10415e790>: Failed to establish a new connection: [Errno 61] Connection refused'))","statusTrace":"../../../../anaconda3/lib/python3.11/site-packages/urllib3/connection.py:198: in _new_conn\n    sock = connection.create_connection(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/util/connection.py:85: in create_connection\n    raise err\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/util/connection.py:73: in create_connection\n    sock.connect(sa)\nE   ConnectionRefusedError: [Errno 61] Connection refused\n\nThe above exception was the direct cause of the following exception:\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connectionpool.py:787: in urlopen\n    response = self._make_request(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connectionpool.py:493: in _make_request\n    conn.request(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connection.py:494: in request\n    self.endheaders()\n../../../../anaconda3/lib/python3.11/http/client.py:1281: in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n../../../../anaconda3/lib/python3.11/http/client.py:1041: in _send_output\n    self.send(msg)\n../../../../anaconda3/lib/python3.11/http/client.py:979: in send\n    self.connect()\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connection.py:325: in connect\n    self.sock = self._new_conn()\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connection.py:213: in _new_conn\n    raise NewConnectionError(\nE   urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10415e790>: Failed to establish a new connection: [Errno 61] Connection refused\n\nThe above exception was the direct cause of the following exception:\ntests/android/test_16_Notification.py:18: in setup_and_teardown\n    driver = DriverManagerAndroid.get_driver()\ncore/driver_manager_android.py:20: in get_driver\n    cls._driver = cls._create_driver()\ncore/driver_manager_android.py:51: in _create_driver\n    driver = webdriver.Remote(Config.APPIUM_SERVER_URL_ANDROID  , options=options)\n../../../../anaconda3/lib/python3.11/site-packages/appium/webdriver/webdriver.py:249: in __init__\n    super().__init__(\n../../../../anaconda3/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:263: in __init__\n    self.start_session(capabilities)\n../../../../anaconda3/lib/python3.11/site-packages/appium/webdriver/webdriver.py:342: in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, w3c_caps)\n../../../../anaconda3/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:455: in execute\n    response = cast(RemoteConnection, self.command_executor).execute(driver_command, params)\n../../../../anaconda3/lib/python3.11/site-packages/selenium/webdriver/remote/remote_connection.py:405: in execute\n    return self._request(command_info[0], url, body=data)\n../../../../anaconda3/lib/python3.11/site-packages/selenium/webdriver/remote/remote_connection.py:429: in _request\n    response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/_request_methods.py:143: in request\n    return self.request_encode_body(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/_request_methods.py:278: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/poolmanager.py:459: in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connectionpool.py:871: in urlopen\n    return self.urlopen(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connectionpool.py:871: in urlopen\n    return self.urlopen(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connectionpool.py:871: in urlopen\n    return self.urlopen(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connectionpool.py:841: in urlopen\n    retries = retries.increment(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/util/retry.py:519: in increment\n    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]\nE   urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=4722): Max retries exceeded with url: /session (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10415e790>: Failed to establish a new connection: [Errno 61] Connection refused'))","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_output_dir","time":{"start":1760956482571,"stop":1760956482571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_url","time":{"start":1760956482571,"stop":1760956482571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"setup_test_session","time":{"start":1760956482571,"stop":1760956482578,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"pytestconfig","time":{"start":1760956482571,"stop":1760956482571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_verify_url","time":{"start":1760956482571,"stop":1760956482571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"setup_and_teardown_test","time":{"start":1760958923390,"stop":1760958923391,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"\n    Test Case: NAF-349\n    As a user, I want an in-app notifications page, so that I can view all my missed notifications in one place, even if I missed the initial push notification.\n    Scenario: Verify app opens to comment or post from notifications\n    \n    Steps:\n    1. Open the app, assume the user is logged in       \n    2. Go to \"Notifications\" tab\n    3. Verify app opens to comment or post from notifications\n    ","status":"broken","statusMessage":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=4722): Max retries exceeded with url: /session (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10415e790>: Failed to establish a new connection: [Errno 61] Connection refused'))","statusTrace":"../../../../anaconda3/lib/python3.11/site-packages/urllib3/connection.py:198: in _new_conn\n    sock = connection.create_connection(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/util/connection.py:85: in create_connection\n    raise err\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/util/connection.py:73: in create_connection\n    sock.connect(sa)\nE   ConnectionRefusedError: [Errno 61] Connection refused\n\nThe above exception was the direct cause of the following exception:\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connectionpool.py:787: in urlopen\n    response = self._make_request(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connectionpool.py:493: in _make_request\n    conn.request(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connection.py:494: in request\n    self.endheaders()\n../../../../anaconda3/lib/python3.11/http/client.py:1281: in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n../../../../anaconda3/lib/python3.11/http/client.py:1041: in _send_output\n    self.send(msg)\n../../../../anaconda3/lib/python3.11/http/client.py:979: in send\n    self.connect()\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connection.py:325: in connect\n    self.sock = self._new_conn()\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connection.py:213: in _new_conn\n    raise NewConnectionError(\nE   urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10415e790>: Failed to establish a new connection: [Errno 61] Connection refused\n\nThe above exception was the direct cause of the following exception:\ntests/android/test_16_Notification.py:18: in setup_and_teardown\n    driver = DriverManagerAndroid.get_driver()\ncore/driver_manager_android.py:20: in get_driver\n    cls._driver = cls._create_driver()\ncore/driver_manager_android.py:51: in _create_driver\n    driver = webdriver.Remote(Config.APPIUM_SERVER_URL_ANDROID  , options=options)\n../../../../anaconda3/lib/python3.11/site-packages/appium/webdriver/webdriver.py:249: in __init__\n    super().__init__(\n../../../../anaconda3/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:263: in __init__\n    self.start_session(capabilities)\n../../../../anaconda3/lib/python3.11/site-packages/appium/webdriver/webdriver.py:342: in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, w3c_caps)\n../../../../anaconda3/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:455: in execute\n    response = cast(RemoteConnection, self.command_executor).execute(driver_command, params)\n../../../../anaconda3/lib/python3.11/site-packages/selenium/webdriver/remote/remote_connection.py:405: in execute\n    return self._request(command_info[0], url, body=data)\n../../../../anaconda3/lib/python3.11/site-packages/selenium/webdriver/remote/remote_connection.py:429: in _request\n    response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/_request_methods.py:143: in request\n    return self.request_encode_body(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/_request_methods.py:278: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/poolmanager.py:459: in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connectionpool.py:871: in urlopen\n    return self.urlopen(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connectionpool.py:871: in urlopen\n    return self.urlopen(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connectionpool.py:871: in urlopen\n    return self.urlopen(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/connectionpool.py:841: in urlopen\n    retries = retries.increment(\n../../../../anaconda3/lib/python3.11/site-packages/urllib3/util/retry.py:519: in increment\n    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]\nE   urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=4722): Max retries exceeded with url: /session (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10415e790>: Failed to establish a new connection: [Errno 61] Connection refused'))","steps":[],"attachments":[{"uid":"5f1b70f1bc49568a","name":"log","source":"5f1b70f1bc49568a.txt","type":"text/plain","size":1979}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"setup_and_teardown_test::0","time":{"start":1760958923507,"stop":1760958923507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"setup_test_session::0","time":{"start":1760959053235,"stop":1760959053235,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"severity","value":"blocker"},{"name":"epic","value":"Mobile App Testing-Android"},{"name":"feature","value":"16.0.0 Notification"},{"name":"story","value":"16.2.0 As a user, I want an in-app notifications page, so that I can view all my missed notifications in one place, even if I missed the initial push notification."},{"name":"tag","value":"program"},{"name":"parentSuite","value":"tests.android"},{"name":"suite","value":"test_16_Notification"},{"name":"subSuite","value":"TestNotification"},{"name":"host","value":"fqqqqq.local"},{"name":"thread","value":"99247-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.android.test_16_Notification"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Qase: NAF-349","url":"https://app.qase.io/case/NAF-349","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":["program"]},"source":"99ffcb903db17646.json","parameterValues":[]}