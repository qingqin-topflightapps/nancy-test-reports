{"uid":"1f9308dcfa26f72f","name":"test_CMS_204_Mark_Notification_As_Unread","fullName":"tests.test_11_CMS_Notifications#test_CMS_204_Mark_Notification_As_Unread","historyId":"305340dba475ce13a31045a71d97746c","time":{"start":1752833989997,"stop":1752833998608,"duration":8611},"description":"\nTest Case 204: Verify the \"Mark as unread\" functionality after marking as read.\n\nTest Steps:\n1. Launch the browser\n2. Login as admin user\n3. Navigate to Notifications page\n4. Switch to Read tab\n5. Mark the first read notification as unread\n6. Verify notification has been marked as unread\n","descriptionHtml":"<p>Test Case 204: Verify the &quot;Mark as unread&quot; functionality after marking as read.</p>\n<p>Test Steps:</p>\n<ol>\n<li>Launch the browser</li>\n<li>Login as admin user</li>\n<li>Navigate to Notifications page</li>\n<li>Switch to Read tab</li>\n<li>Mark the first read notification as unread</li>\n<li>Verify notification has been marked as unread</li>\n</ol>\n","status":"failed","statusMessage":"AssertionError: Failed to mark the notification as unread.\nassert False","statusTrace":"@allure.feature(\"11.0.0 CMS Notifications\")\n    @allure.epic(\"Web CMS Testing\")\n    @allure.story(\"11.5.0 Mark Notification as Unread\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"\"\"\n    Test Case 204: Verify the \"Mark as unread\" functionality after marking as read.\n    \n    Test Steps:\n    1. Launch the browser\n    2. Login as admin user\n    3. Navigate to Notifications page\n    4. Switch to Read tab\n    5. Mark the first read notification as unread\n    6. Verify notification has been marked as unread\n    \"\"\")\n    def test_CMS_204_Mark_Notification_As_Unread():\n        with sync_playwright() as p:\n            # Launch Browser\n            browser = p.chromium.launch(headless=False, slow_mo=200)\n            page = browser.new_page()\n    \n            # Login using the existing login class\n            login_page = LoginPage(page)\n            login_page.loginDev(admin_user, admin_pw)\n    \n            # Go to Notifications\n            notifications_page = NotificationsPage(page)\n            notifications_page.go_to_notifications()\n    \n            # Switch to 'Read' tab\n            notifications_page.switch_to_read_tab()\n    \n            # Mark the first read notification as unread\n            result = notifications_page.mark_first_notification_as_unread()\n    \n            # Verify the notification has been marked as unread\n>           assert result, \"Failed to mark the notification as unread.\"\nE           AssertionError: Failed to mark the notification as unread.\nE           assert False\n\ntests/test_11_CMS_Notifications.py:209: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1752833688847,"stop":1752833688847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1752833688847,"stop":1752833688847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1752833688847,"stop":1752833688847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1752833688847,"stop":1752833688847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"11.0.0 CMS Notifications"},{"name":"story","value":"11.5.0 Mark Notification as Unread"},{"name":"severity","value":"normal"},{"name":"epic","value":"Web CMS Testing"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_11_CMS_Notifications"},{"name":"host","value":"fqqqqq.local"},{"name":"thread","value":"96781-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_11_CMS_Notifications"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c01c7b5c041bded7","status":"failed","statusDetails":"AssertionError: Failed to mark the notification as unread.\nassert False","time":{"start":1752833981127,"stop":1752833988983,"duration":7856}},{"uid":"67c62807a7485464","status":"failed","statusDetails":"AssertionError: Failed to mark the notification as unread.\nassert False","time":{"start":1752833971336,"stop":1752833980115,"duration":8779}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"1f9308dcfa26f72f.json","parameterValues":[]}