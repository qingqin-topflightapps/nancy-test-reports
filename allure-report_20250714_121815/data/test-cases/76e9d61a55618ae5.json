{"uid":"76e9d61a55618ae5","name":"test_CMS_214_Delete_From_Comment_Thread","fullName":"tests.test_11_CMS_Notifications#test_CMS_214_Delete_From_Comment_Thread","historyId":"9943b6f45ea356aa5e1ab3edec78a5fa","time":{"start":1752463770003,"stop":1752463806273,"duration":36270},"description":"\nTest Case 214: Verify ability to delete comment from comment/question thread.\n\nTest Steps:\n1. Launch the browser\n2. Login as admin user\n3. Navigate to Notifications page\n4. Check for unread notifications\n5. If no unread notifications, switch to Read tab\n6. Open the first comment thread\n7. Delete comment in thread\n8. Verify comment is deleted successfully\n","descriptionHtml":"<p>Test Case 214: Verify ability to delete comment from comment/question thread.</p>\n<p>Test Steps:</p>\n<ol>\n<li>Launch the browser</li>\n<li>Login as admin user</li>\n<li>Navigate to Notifications page</li>\n<li>Check for unread notifications</li>\n<li>If no unread notifications, switch to Read tab</li>\n<li>Open the first comment thread</li>\n<li>Delete comment in thread</li>\n<li>Verify comment is deleted successfully</li>\n</ol>\n","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"Options\")","statusTrace":"@allure.feature(\"11.0.0 CMS Notifications\")\n    @allure.epic(\"Web CMS Testing\")\n    @allure.story(\"11.14.0 Delete From Comment Thread\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"\"\"\n    Test Case 214: Verify ability to delete comment from comment/question thread.\n    \n    Test Steps:\n    1. Launch the browser\n    2. Login as admin user\n    3. Navigate to Notifications page\n    4. Check for unread notifications\n    5. If no unread notifications, switch to Read tab\n    6. Open the first comment thread\n    7. Delete comment in thread\n    8. Verify comment is deleted successfully\n    \"\"\")\n    def test_CMS_214_Delete_From_Comment_Thread():\n        with sync_playwright() as p:\n            browser = p.chromium.launch()\n            page = browser.new_page()\n    \n            # Login using the existing login class\n            login_page = LoginPage(page)\n            login_page.loginDev(admin_user, admin_pw)\n    \n            # Navigate to Notifications page\n            notifications_page = NotificationsPage(page)\n            notifications_page.go_to_notifications()\n    \n            # Check if there are unread notifications\n            if notifications_page.has_notifications():\n                print(\"Unread notifications found. Opening the first notification.\")\n                notifications_page.open_first_comment_thread()\n                notifications_page.delete_comment_in_thread()\n            else:\n                print(\"No unread notifications found, switching to Read tab.\")\n                notifications_page.switch_to_read_tab()\n    \n                notifications_page.open_first_comment_thread()\n>               notifications_page.delete_comment_in_thread()\n\ntests/test_11_CMS_Notifications.py:622: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/NotificationsPage.py:253: in delete_comment_in_thread\n    self.page.get_by_role(\"button\", name=\"Options\").click()\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/sync_api/_generated.py:15505: in click\n    self._sync(\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/_impl/_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/_impl/_frame.py:521: in click\n    await self._channel.send(\"click\", self._timeout, locals_to_params(locals()))\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/_impl/_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x103308950>\ncb = <function Channel.send.<locals>.<lambda> at 0x104bfdb20>, is_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"button\", name=\"Options\")\n\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/_impl/_connection.py:558: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1752463095832,"stop":1752463095833,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1752463095833,"stop":1752463095833,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1752463095833,"stop":1752463095833,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1752463095833,"stop":1752463095833,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\nTest Case 214: Verify ability to delete comment from comment/question thread.\n\nTest Steps:\n1. Launch the browser\n2. Login as admin user\n3. Navigate to Notifications page\n4. Check for unread notifications\n5. If no unread notifications, switch to Read tab\n6. Open the first comment thread\n7. Delete comment in thread\n8. Verify comment is deleted successfully\n","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"Options\")","statusTrace":"@allure.feature(\"11.0.0 CMS Notifications\")\n    @allure.epic(\"Web CMS Testing\")\n    @allure.story(\"11.14.0 Delete From Comment Thread\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"\"\"\n    Test Case 214: Verify ability to delete comment from comment/question thread.\n    \n    Test Steps:\n    1. Launch the browser\n    2. Login as admin user\n    3. Navigate to Notifications page\n    4. Check for unread notifications\n    5. If no unread notifications, switch to Read tab\n    6. Open the first comment thread\n    7. Delete comment in thread\n    8. Verify comment is deleted successfully\n    \"\"\")\n    def test_CMS_214_Delete_From_Comment_Thread():\n        with sync_playwright() as p:\n            browser = p.chromium.launch()\n            page = browser.new_page()\n    \n            # Login using the existing login class\n            login_page = LoginPage(page)\n            login_page.loginDev(admin_user, admin_pw)\n    \n            # Navigate to Notifications page\n            notifications_page = NotificationsPage(page)\n            notifications_page.go_to_notifications()\n    \n            # Check if there are unread notifications\n            if notifications_page.has_notifications():\n                print(\"Unread notifications found. Opening the first notification.\")\n                notifications_page.open_first_comment_thread()\n                notifications_page.delete_comment_in_thread()\n            else:\n                print(\"No unread notifications found, switching to Read tab.\")\n                notifications_page.switch_to_read_tab()\n    \n                notifications_page.open_first_comment_thread()\n>               notifications_page.delete_comment_in_thread()\n\ntests/test_11_CMS_Notifications.py:622: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/NotificationsPage.py:253: in delete_comment_in_thread\n    self.page.get_by_role(\"button\", name=\"Options\").click()\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/sync_api/_generated.py:15505: in click\n    self._sync(\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/_impl/_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/_impl/_frame.py:521: in click\n    await self._channel.send(\"click\", self._timeout, locals_to_params(locals()))\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/_impl/_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x103308950>\ncb = <function Channel.send.<locals>.<lambda> at 0x104bfdb20>, is_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"button\", name=\"Options\")\n\n../natal_mobile_auto/venv/lib/python3.13/site-packages/playwright/_impl/_connection.py:558: TimeoutError","steps":[],"attachments":[{"uid":"4fcde733d2965869","name":"stdout","source":"4fcde733d2965869.txt","type":"text/plain","size":393}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"11.0.0 CMS Notifications"},{"name":"story","value":"11.14.0 Delete From Comment Thread"},{"name":"epic","value":"Web CMS Testing"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_11_CMS_Notifications"},{"name":"host","value":"fqqqqq.local"},{"name":"thread","value":"67398-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_11_CMS_Notifications"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"60a29c21160291b3","status":"broken","statusDetails":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"Options\")","time":{"start":1752463731703,"stop":1752463768871,"duration":37168}},{"uid":"17b1bea6b99b12a3","status":"broken","statusDetails":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"Options\")","time":{"start":1752463694493,"stop":1752463730573,"duration":36080}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"76e9d61a55618ae5.json","parameterValues":[]}